- @title = "Authorize '#{@client["name"]}'"

#login.panel
  h3
    | Authorize <strong>#{@client["name"]}?</strong>

  form.authorize role="form" method="post" action="/oauth/authorize"
    input type="hidden" name=Rack::Csrf.field value=Rack::Csrf.token(env)

    - if @client["description"]
      p #{@client["description"]}

    p
      strong #{@client["name"]}
      | &nbsp;is requesting the following access:
      / The is_a array thing is a temporary safeguard against old cookies.
      ul
        - if @scope && @scope.is_a?(Array)
          - @scope.each do |scope|
            - if scope == "global"
              li Read and write access to <strong>all</strong> of your account, apps and resources.
            - elsif scope == "identity"
              li Read-only access to your account information.
            - elsif scope == "create-apps"
              li Create new apps in your account. The provider then retains control over the apps it creates, although it doesn't have access to any of the other apps in your account.
            - elsif scope == "read"
              li Read-only access to <strong>all</strong> of your apps and resources, excluding account information and configuration variables.
            - elsif scope == "read-protected"
              li Read-only access to <strong>all</strong> of your apps and resources, excluding account information. Includes configuration variables, which may include runtime secrets.
            - elsif scope == "write"
              li Read and write access to <strong>all</strong> of your apps and resources, excluding account information and configuration variables.
            - elsif scope == "write-protected"
              li Read and write access to <strong>all</strong> of your apps and resources, excluding account information. Includes configuration variables, which may include runtime secrets.
            - else
              li Unknown scope: <strong>#{scope}</strong>.
        - else
          li Read and write access to <strong>all</strong> your apps and your account.

      p
        small
          | You can revoke this authorization at any time from your <a href="http://dashboard.heroku.com/account">Dashboard account page</a> or using the <a href="https://github.com/heroku/heroku-oauth">heroku-oauth</a> CLI plugin.

    fieldset.split
      button.btn.btn-default.btn-lg href=@deny_url tabindex="2" Deny
      / Note that a value of "Allow" should be kept here so that the
      / server-side component can distinguish a confirmed form post.
      button.btn.btn-primary.btn-lg type="submit" name="authorize" tabindex="1" value="Allow" Allow
